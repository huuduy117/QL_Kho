<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxExpand.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        0AAADdABEGw9BwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABkeSURBVHhe7d1/
        qK17XhfwdeeXP8bxRyYDoZaD4wT5Y6b+CbGUSWFKsCnEhJgiTDHTtAgKQyyKSB2dUKKUVIIw7ccfOmMX
        yUY0K5D8SSkjYTBKKYM5KNrcmXGm93POPuesvc9nn73XWs961vP9PK83vA7nvLncu/d61tz3Z+7Zd9/d
        Bz/4QQBgY8oSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA
        3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOit
        LAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soS
        AOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA
        3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOitLAGA3soSAOit
        LAGA3soSAOitLAGA3soSAOitLAGA3soSADhc8mHxSfG6+Ph4afXHrUFZAgC15FXxFfHN8T3x9viFeHdM
        f8C+D8S74ufih+JfxD+KN8XHVX/+pZQlAPBQ8pL47PimmIZ+f+BP8bvxX+PvxGurv/Y5lSUAbFnyofHn
        43vjN2J/uM/lV+Lb4/PjuerjmlNZAsAWJdP/2//L8cuxP85L+5n4/OpjnEtZAsCWJM/Fn4t3xP4QX9qP
        xx+vPuZTlSUAbEXyJ+OnY3941+b5eF318R+rLAGgu+ST48dif2jXbPo3Cv5VfHT1+RyqLAGgs+Rz4//G
        /sCOYvptitdUn9chyhIAukr+Wrw/9kd1NNP3HHhD9fndV1kCQDfJy+I7Y39IRzYdMX+j+lzvoywBoJPk
        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
        P3c/g3bAv69RAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timerDateTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>177, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>